@model List<ClientModel>
@{
    ViewData["Title"] = "Lista de clientes";

}

<div>
    <h1 class="display-5 mt-5 mb-5">Lista de clientes</h1>
    
    <section>
        <div class="mb-4 bg-light p-4 border" style="max-width: 900px;">
            <form method="get" asp-controller="cliente" asp-action="listar">
                <div class="row">
                    <div class="col">
                        <input type="text" name="filtroNome" placeholder="Filtrar por Nome" class="form-control" />
                    </div>
                    <div class="col">
                        <input type="text" name="filtroEmail" placeholder="Filtrar por E-mail" class="form-control" />
                    </div>
                    <div class="col">
                        <input type="text" name="filtroCPF" placeholder="Filtrar por CPF" class="form-control" />
                    </div>
                    <div class="col" style="max-width: fit-content;">
                        <a href="@Url.Action("listar", "cliente")" class="btn btn-secondary">Limpar Filtros</a>
                    </div>
                    <div class="col" style="max-width: fit-content;">
                        <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
                    </div>
                </div>
            </form>
        </div>

        <div class="d-flex mb-4">
            <a role="button" class="d-flex flex-start btn btn-primary" asp-controller="cliente" asp-action="criar">Criar cliente</a>
        </div>

        @if (Model != null && Model.Count > 0)
        {
        <table class="table border bg-light">
            <thead>
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Nome</th>
                    <th scope="col">E-mail</th>
                    <th scope="col">CPF</th>
                    <th scope="col">RG</th>
                    <th scope="col">Contatos</th>
                    <th scope="col">Endereços</th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = Model.Count - 1; i >= 0; i--)
                {
                    var client = Model[i];

                    <tr>
                        <th class="border">@client.Id</th> <!-- ID -->
                        <td class="border">@client.Nome</td> <!-- Nome -->
                        <td class="border">@client.Email</td> <!-- E-mail -->
                        <td class="border">@FormatarCPF(client.CPF)</td> <!-- CPF -->
                        <td class="border">@FormatarRG(client.RG)</td> <!-- RG -->
                        <td class="border"> <!-- Contatos -->          
                            <div class="row">
                                <div class="col">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">Tipo</th>
                                                <th scope="col">Telefone</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var contato in client.Contatos)
                                            {
                                                <tr>
                                                    <td>@contato.Tipo</td>
                                                    <td>(@contato.DDD) @FormatarTelefone(contato.Telefone.ToString())</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>   
                                </div>
                            </div>
                        </td> 
                        <td> <!-- Endereços -->
                            <div class="row">
                                <div class="col">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">Tipo</th>
                                                <th scope="col">Local</th>
                                                <th scope="col">Referência</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var endereco in client.Enderecos)
                                            {
                                                <tr>
                                                    <td>@endereco.Tipo</td>
                                                    <td>
                                                        <div>
                                                            @($"{endereco.Cidade}, {endereco.Bairro} - {endereco.Estado}")
                                                        </div>
                                                        <div>
                                                            @($"{endereco.Logradouro}, {endereco.Complemento}, {endereco.Numero} - {FormatarCep(endereco.CEP)}")
                                                        </div>
                                                    </td>
                                                    <td>@endereco.Referencia</td>
                                                </tr>
                                            }  
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </td> 
                        <td>
                            <div class="d-flex flex-column gap-2 mt-3" role="group" aria-label="Basic example">
                                <a role="button" class="btn btn-secondary" asp-controller="cliente" asp-action="atualizar" asp-route-id="@client.Id">Editar</a>
                                <a role="button" class="btn btn-danger" asp-controller="cliente" asp-action="confirmarRemover" asp-route-id="@client.Id">Remover</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        }
        else
        {
            <h2 class="m-5 h5 fw-bold">Nenhum cliente encontrado.</h2>
        }
    </section>
</div>

@functions {
    // Formatar Telefone
    private string FormatarTelefone(string telefone)
    {
        if (telefone.Length >= 9)
        {
            return $"{telefone.Substring(0, 4)}-{telefone.Substring(4)}";
        }

        return telefone;
    }

    // Formatar CPF
    private string FormatarCPF(string cpf)
    {
        if (cpf.Length == 11)
        {
            return $"{cpf.Substring(0, 3)}.{cpf.Substring(3, 3)}.{cpf.Substring(6, 3)}-{cpf.Substring(9)}";
        }

        return cpf;
    }

    // Formatar RG
    private string FormatarRG(string rg)
    {
        if (!string.IsNullOrEmpty(rg) && rg.Length >= 9)
        {
            return $"{rg.Substring(0, 2)}.{rg.Substring(2, 3)}.{rg.Substring(5, 3)}-{rg.Substring(8)}";
        }

        return rg;
    }

    // Formatar CEP
    private string FormatarCep(string cep)
    {
        if (!string.IsNullOrEmpty(cep) && cep.Length >= 8)
        {
            return $"{cep.Substring(0, 5)}-{cep.Substring(5)}";
        }

        return cep;
    }
}
